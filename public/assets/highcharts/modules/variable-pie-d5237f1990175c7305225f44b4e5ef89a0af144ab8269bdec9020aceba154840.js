"use strict";!function(t){"object"==typeof module&&module.exports?module.exports=t:t(Highcharts)}(function(t){var a,e,i,n,s,r,l,o;e=(a=t).pick,i=a.each,n=a.grep,s=a.arrayMin,r=a.arrayMax,l=a.seriesType,o=a.seriesTypes.pie.prototype,l("variablepie","pie",{minPointSize:"10%",maxPointSize:"100%",zMin:undefined,zMax:undefined,sizeBy:"area",tooltip:{pointFormat:'<span style="color:{point.color}">\u25cf</span> {series.name}<br/>Value: {point.y}<br/>Size: {point.z}<br/>'}},{pointArrayMap:["y","z"],parallelArrays:["x","y","z"],redraw:function(){this.center=null,o.redraw.call(this,arguments)},zValEval:function(t){return"number"==typeof t&&!isNaN(t)||null},calculateExtremes:function(){var t,a,l=this,o=l.chart,h=o.plotWidth,c=o.plotHeight,M=l.options,d=2*(M.slicedOffset||0),p=l.zData,u=Math.min(h,c)-d,m={},z=l.center||l.getCenter();i(["minPointSize","maxPointSize"],function(t){var a=M[t],e=/%$/.test(a);a=parseInt(a,10),m[t]=e?u*a/100:2*a}),l.minPxSize=z[3]+m.minPointSize,l.maxPxSize=Math.max(Math.min(z[2],m.maxPointSize),z[3]+m.minPointSize),p.length&&(t=e(M.zMin,s(n(p,l.zValEval))),a=e(M.zMax,r(n(p,l.zValEval))),this.getRadii(t,a,l.minPxSize,l.maxPxSize))},getRadii:function(t,a,e,i){for(var n,s,r,l=0,o=this.zData,h=o.length,c=[],M="radius"!==this.options.sizeBy,d=a-t;l<h;l++)(s=this.zValEval(o[l])?o[l]:t)<=t?r=e/2:s>=a?r=i/2:(n=d>0?(s-t)/d:.5,M&&(n=Math.sqrt(n)),r=Math.ceil(e+n*(i-e))/2),c.push(r);this.radii=c},translate:function(t){this.generatePoints();var a,i,n,s,r,l,o,h,c,M,d,p=this,u=0,m=1e3,z=p.options,x=z.slicedOffset,P=x+(z.borderWidth||0),b=z.startAngle||0,f=Math.PI/180*(b-90),g=Math.PI/180*(e(z.endAngle,b+360)-90),y=g-f,v=p.points,D=z.dataLabels.distance,S=z.ignoreHiddenPoint,I=v.length;for(p.startAngleRad=f,p.endAngleRad=g,p.calculateExtremes(),t||(p.center=t=p.getCenter()),p.getX=function(a,e,i){var n=i.series.radii[i.index];return s=Math.asin(Math.min((a-t[1])/(n+i.labelDistance),1)),t[0]+(e?-1:1)*(Math.cos(s)*(n+i.labelDistance))},o=0;o<I;o++)h=v[o],c=p.radii[o],h.labelDistance=e(h.options.dataLabels&&h.options.dataLabels.distance,D),p.maxLabelDistance=Math.max(p.maxLabelDistance||0,h.labelDistance),i=f+u*y,S&&!h.visible||(u+=h.percentage/100),n=f+u*y,h.shapeType="arc",h.shapeArgs={x:t[0],y:t[1],r:c,innerR:t[3]/2,start:Math.round(i*m)/m,end:Math.round(n*m)/m},(s=(n+i)/2)>1.5*Math.PI?s-=2*Math.PI:s<-Math.PI/2&&(s+=2*Math.PI),h.slicedTranslation={translateX:Math.round(Math.cos(s)*x),translateY:Math.round(Math.sin(s)*x)},r=Math.cos(s)*t[2]/2,l=Math.sin(s)*t[2]/2,M=Math.cos(s)*c,d=Math.sin(s)*c,h.tooltipPos=[t[0]+.7*r,t[1]+.7*l],h.half=s<-Math.PI/2||s>Math.PI/2?1:0,h.angle=s,a=Math.min(P,h.labelDistance/5),h.labelPos=[t[0]+M+Math.cos(s)*h.labelDistance,t[1]+d+Math.sin(s)*h.labelDistance,t[0]+M+Math.cos(s)*a,t[1]+d+Math.sin(s)*a,t[0]+M,t[1]+d,h.labelDistance<0?"center":h.half?"right":"left",s]}})});